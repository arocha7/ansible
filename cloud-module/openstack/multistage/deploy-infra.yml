---

#- include: "../../../utils/deploy-openstackclients.yml"

# talk to all hosts just so we can learn about them
- hosts: localhost
  connection: local
  vars:
    cld: alb
    environ: qual
  tasks:
    - include_vars: "~/.config/openstack/vault_{{ cld }}_{{ environ }}.yaml"
    - include_vars: "{{ item }}"
      with_first_found:
        - "vars/{{ ansible_distribution_release }}.yml"
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
        - "vars/default.yml"
      when: vm_user is not defined or vm_os is not defined

    - name: launch 'N' instances
      os_server:
        cloud: os_alb # http://docs.openstack.org/developer/os-client-config/
        name: "{{ item.name }}"
        state: present
        key_name: "{{ item.key }}"
        availability_zone: "{{ item.availability_zone }}"
        security_groups: qual-secgrp
        nics: "{{ item.nics }}"
        image: "{{ item.image }}"
        flavor: "{{ item.flavor }}"
        wait: yes
      with_items: "{{ servers }}"
      register: "os_hosts"

    - debug: msg="{{ os_hosts }}"

    - name: create in-memory Inventory # temporary in-memory group of hosts that only persists until the end of the playbook
      add_host:
        name: "{{ item.openstack.name }}"
        groups: "{{ item.item.meta.group }}"
        ansible_host: "{{ item.openstack.accessIPv4 }}"
      with_items: "{{ os_hosts.results }}"

    - name: create static Inventory based on a provided Template ['jinja2'](http://docs.ansible.com/ansible/template_module.html)
      become: true
      template: 
        src: inventory_template.j2
        dest: "/etc/ansible/hosts"

    - name: 1st Wait for SSH on the Instance
      command: >
        ssh -oBatchMode=yes -oStrictHostKeyChecking=no -i ~/.ssh/{{ item.openstack.key_name }}.pem -l centos {{ item.openstack.accessIPv4 }} true
      register: result
      until: result|success
      retries: 20
      delay: 10
      with_items: "{{ os_hosts.results }}"

