---

# talk to all hosts just so we can learn about them
- hosts: localhost
  connection: local
  tasks:
    - include_vars: "~/.config/openstack/os_ptin_{{ environ }}_vault.yml"

    - name: launch 'N' instances
      os_server:
        cloud: os_cloud
        name: "{{ prefix }}-{{ item.name }}"
        state: present
        key_name: "{{ item.key }}"
        availability_zone: "{{ item.availability_zone }}"
        nics: "{{ item.nics }}"
        image: "{{ item.image }}"
        flavor: "{{ item.flavor }}"
      with_items: "{{ servers }}"
      register: "os_hosts"

    - name: create in-memory Inventory # temporary in-memory group of hosts that only persists until the end of the playbook (to be used in the next task)
      add_host:
        #name: "{{ item['openstack']['human_id'] }}"
        #groups: "{{ item['item']['meta']['group'] }}"
        #ansible_host: "{{ item.openstack.accessIPv4 }}"
        name: "{{ item.openstack.human_id }}"
        groups: "{{ item.item.meta.group }}"
        ansible_host: "{{ item.openstack.accessIPv4 }}"
      with_items: "{{ os_hosts.results }}"

    - name: create static Inventory based on a provided Template ('jinja2') - http://docs.ansible.com/ansible/template_module.html
      template: 
        src: inventory_template.j2
        dest: "./hosts"

- hosts: web
  remote_user: ubuntu
  become: true
  tasks:
    - name: ensure Apache is at the latest version
      yum: name=httpd state=latest
    - name: make sure Apache is running
      service: name=httpd state=running

- hosts: db
  remote_user: centos
  become: true
  tasks:
    - name: ensure pgSQL is at the latest version
      yum: name=postgresql state=latest
    - name: make sure pgSQL is running
      service: name=potsgresql state=running

