---

#- hosts: localhost
#  connection: local
#  become: true
#  roles:
#    - ~/ansible/utils/roles/openstackclients/

- name: ##### 1st STEP: deploy VMs via Ansible Cloud Module for Openstack
  hosts: localhost
  connection: local
  tasks:

  - include_vars: vars/defaults.yml

  - name: load userdata script
    shell: cat ./userdata/ansible_{{ ansible_distribution_release }}.sh
    register: user_data

  - name: launch an Openstack 'nova-compute' instance
    os_server:
      state: present
      cloud: os_ptin
      name: "{{ vm_name_prefix }}-{{ item }}"
      #region_name: RegionOne
      availability_zone: nova
      image: "centos7-cldimg"
      key_name: son-ift-ptin
      flavor: m1.test
      security_groups: qual-secgrp
      nics:
        - net-id: "3ef0b481-8c8c-49c7-88f5-10e4d8c5612f"
      auto_ip: yes
      userdata: "{{ user_data.stdout }}"
      meta: group=single
#        hostname: "{{ vm_name_prefix }}-{{ item }}"
      wait: yes
    register: newnodes
    with_sequence: count={{ nbofvms }}
    #with_sequence: start=1 end=2 format=%02x

  - debug: msg="{{ newnodes }}"

  - name: add new VM instances to hosts file
    add_host:
      name: "{{ item.openstack.name }}"
      groups: "{{ item.openstack.metadata.group }}"
      ansible_host: "{{ item.openstack.accessIPv4 }}"
    with_items: "{{ newnodes.results }}"

  - name: create static Inventory based on a provided Template ['jinja2'](http://docs.ansible.com/ansible/template_module.html)
    template:
      src: inventory_template.j2
      dest: "./hosts"

  - name: wait for SSH
    wait_for: host={{ item.openstack.accessIPv4 }} port=22 delay=60 timeout=180 state=started
    with_items: "{{ newnodes.results }}"

#### 2nd STEP: deploy APP's

- name: #### 2nd STEP: Configure nodes and deploy APP's
  hosts: single
  become: true
  become_method: sudo
  gather_facts: false
  tasks:
    - name: "Wait for SSH banners"
      local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=OpenSSH delay=5
      become: False

    - name: install apps
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - htop
        - git

    - name: Pause play to interact with the servers
      pause: prompt="Playbook paused... hit <enter> to continue or <ctrl-c a> to abort"


