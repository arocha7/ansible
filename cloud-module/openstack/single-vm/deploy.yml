---

#- hosts: localhost
#  connection: local
#  become: true
#  roles:
#    - ~/ansible/utils/roles/openstackclients/

- name: ##### 1st STEP: deploy VMs via Ansible Cloud Module for Openstack
  hosts: localhost
  connection: local
  tasks:

  - include_vars: vars/defaults.yml

  - name: load userdata script
    shell: cat ./userdata/ansible_{{ ansible_distribution_release }}.sh
    register: user_data

  - name: launch an Openstack 'nova-compute' instance
    os_server:
      state: present
      cloud: os_ptin
      name: "{{ vm_name_prefix }}-{{ item }}"
      region_name: "{{ region_name }}"
      availability_zone: "{{ availability_zone }}"
      image: "{{ image }}"
      key_name: "{{ key_name }}"
      flavor: "{{ flavor }}"
      security_groups: "{{ security_groups }}"
      nics:
        - net-id: "{{ qual_int_net_id }}"
      auto_ip: yes
      userdata: "{{ user_data.stdout }}"
      meta: group=single
#        hostname: "{{ vm_name_prefix }}-{{ item }}"
      wait: yes
    register: newnodes
    #with_sequence: count={{ nbofvms }}
    with_sequence: "start=1 end={{ nbofvms }} format=%02x"

  - name: add new VM instances to hosts file
    add_host:
      name: "{{ item.openstack.name }}"
      groups: "{{ item.openstack.metadata.group }}"
      ansible_host: "{{ item.openstack.accessIPv4 }}"
    with_items: "{{ newnodes.results }}"

  - name: create static Inventory based on a provided Template 
    template:
      src: inventory_template.j2
      dest: "/etc/ansible/hosts"
    # ['jinja2'](http://docs.ansible.com/ansible/template_module.html)


  - name: "WAIT_FOR"
    become_user: centos
    local_action: wait_for port=22 host="{{ ansible_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=10 timeout=300


- name: "2nd STEP - deploy APPs"
  hosts: single
  become: true
  gather_facts: true
  connection: ssh
  roles:
    - ~/ansible/utils/roles/common
    - ~/ansible/utils/roles/apache

