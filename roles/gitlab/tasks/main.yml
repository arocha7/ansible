---
# tasks file for gitlab

- name: install Postfix to send notification emails
  package:
    name: postfix
    state: present

- name: start Postfix
  systemd:
    name: postfix
    state: started
    enabled: yes

- block:

  - name: add the GitLab package repository and install the package
    get_url:
      url: https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh
      dest: /tmp
      mode: 0755

  - name: install the package
    shell: /tmp/script.rpm.sh

  when: ansible_os_family == 'RedHat'

- block:

  - name: add the GitLab package repository and install the package
    get_url:
      url: https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh
      dest: /tmp
      mode: 0755

  - name: install the package
    shell: /tmp/script.deb.sh

  when: ansible_os_family == 'Debian'

- name: install Gitlab CE
  package:
    name: gitlab-ce
    state: present


# Gitlab CONFIG

- name: create a backup of config file
  copy:
    src: /etc/gitlab/gitlab.rb
    dest: /etc/gitlab/gitlab.rb.SOURCE
    remote_src: yes

- name: set config file
  copy: 
    src: gitlab.rb
    dest: /etc/gitlab/gitlab.rb

- name: change Gitlab data directory
  file:
    path: /data
    state: directory
    mode: '0755'

- name: reconfigure
  shell: gitlab-ctl reconfigure


# Install Gitlab Runner - https://gitlab-runner-downloads.s3.amazonaws.com/latest/index.html

- block:

  - name: install RPM Gitlab Runner package 
    yum:
      name: https://gitlab-runner-downloads.s3.amazonaws.com/latest/rpm/gitlab-runner_amd64.rpm
      state: present


  when: ansible_os_family == 'RedHat'

- block:

  - name: install DEB Gitlab Runner package
    apt: 
      name: https://gitlab-runner-downloads.s3.amazonaws.com/latest/deb/gitlab-runner_amd64.deb
      state: present

  when: ansible_os_family == 'Debian'

# Register Gitlab Runner - 

- name: register Gitlab Runner
  shell: 'gitlab-runner register \
  --non-interactive \
  --url "https://gitlab-ci.ptin.corppt.com/" \
  #--registration-token "PROJECT_REGISTRATION_TOKEN" \
  --executor "shell" \
  --shell "bash"
  #--docker-image alpine:latest \
  --description "shell-runner" \
  --tag-list "shell,alb,cognitive" \
  --run-untagged="true" \
  --locked="false" \
  --access-level="not_protected"'
